/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_SPI_H
#define _MOCK_SPI_H

#include "unity.h"
#include "spi.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_spi_Init(void);
void mock_spi_Destroy(void);
void mock_spi_Verify(void);




#define spi_readData_IgnoreAndReturn(cmock_retval) spi_readData_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void spi_readData_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
#define spi_readData_StopIgnore() spi_readData_CMockStopIgnore()
void spi_readData_CMockStopIgnore(void);
#define spi_readData_ExpectAndReturn(dataOut, baudrate, cmock_retval) spi_readData_CMockExpectAndReturn(__LINE__, dataOut, baudrate, cmock_retval)
void spi_readData_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t dataOut, uint16_t baudrate, uint16_t cmock_to_return);
typedef uint16_t (* CMOCK_spi_readData_CALLBACK)(uint16_t dataOut, uint16_t baudrate, int cmock_num_calls);
void spi_readData_AddCallback(CMOCK_spi_readData_CALLBACK Callback);
void spi_readData_Stub(CMOCK_spi_readData_CALLBACK Callback);
#define spi_readData_StubWithCallback spi_readData_Stub
#define checkBaudRate_IgnoreAndReturn(cmock_retval) checkBaudRate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void checkBaudRate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define checkBaudRate_StopIgnore() checkBaudRate_CMockStopIgnore()
void checkBaudRate_CMockStopIgnore(void);
#define checkBaudRate_ExpectAndReturn(baudrate, cmock_retval) checkBaudRate_CMockExpectAndReturn(__LINE__, baudrate, cmock_retval)
void checkBaudRate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t baudrate, _Bool cmock_to_return);
typedef _Bool (* CMOCK_checkBaudRate_CALLBACK)(uint16_t baudrate, int cmock_num_calls);
void checkBaudRate_AddCallback(CMOCK_checkBaudRate_CALLBACK Callback);
void checkBaudRate_Stub(CMOCK_checkBaudRate_CALLBACK Callback);
#define checkBaudRate_StubWithCallback checkBaudRate_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
